//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.1.
// 
#pragma warning disable 1591

namespace vwarDAL.FedoraAPIM {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="Fedora-API-M-Binding-SOAPHTTP", Namespace="http://www.fedora.info/definitions/1/0/api/")]
    public partial class FedoraAPIMService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback ingestOperationCompleted;
        
        private System.Threading.SendOrPostCallback modifyObjectOperationCompleted;
        
        private System.Threading.SendOrPostCallback getObjectXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback exportOperationCompleted;
        
        private System.Threading.SendOrPostCallback purgeObjectOperationCompleted;
        
        private System.Threading.SendOrPostCallback addDatastreamOperationCompleted;
        
        private System.Threading.SendOrPostCallback modifyDatastreamByReferenceOperationCompleted;
        
        private System.Threading.SendOrPostCallback modifyDatastreamByValueOperationCompleted;
        
        private System.Threading.SendOrPostCallback setDatastreamStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback setDatastreamVersionableOperationCompleted;
        
        private System.Threading.SendOrPostCallback compareDatastreamChecksumOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDatastreamOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDatastreamsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDatastreamHistoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback purgeDatastreamOperationCompleted;
        
        private System.Threading.SendOrPostCallback getNextPIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback getRelationshipsOperationCompleted;
        
        private System.Threading.SendOrPostCallback addRelationshipOperationCompleted;
        
        private System.Threading.SendOrPostCallback purgeRelationshipOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public FedoraAPIMService() {
            this.Url = global::vwarDAL.Properties.Settings.Default.vwarDAL_FedoraAPIM_Fedora_API_M_Service;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event ingestCompletedEventHandler ingestCompleted;
        
        /// <remarks/>
        public event modifyObjectCompletedEventHandler modifyObjectCompleted;
        
        /// <remarks/>
        public event getObjectXMLCompletedEventHandler getObjectXMLCompleted;
        
        /// <remarks/>
        public event exportCompletedEventHandler exportCompleted;
        
        /// <remarks/>
        public event purgeObjectCompletedEventHandler purgeObjectCompleted;
        
        /// <remarks/>
        public event addDatastreamCompletedEventHandler addDatastreamCompleted;
        
        /// <remarks/>
        public event modifyDatastreamByReferenceCompletedEventHandler modifyDatastreamByReferenceCompleted;
        
        /// <remarks/>
        public event modifyDatastreamByValueCompletedEventHandler modifyDatastreamByValueCompleted;
        
        /// <remarks/>
        public event setDatastreamStateCompletedEventHandler setDatastreamStateCompleted;
        
        /// <remarks/>
        public event setDatastreamVersionableCompletedEventHandler setDatastreamVersionableCompleted;
        
        /// <remarks/>
        public event compareDatastreamChecksumCompletedEventHandler compareDatastreamChecksumCompleted;
        
        /// <remarks/>
        public event getDatastreamCompletedEventHandler getDatastreamCompleted;
        
        /// <remarks/>
        public event getDatastreamsCompletedEventHandler getDatastreamsCompleted;
        
        /// <remarks/>
        public event getDatastreamHistoryCompletedEventHandler getDatastreamHistoryCompleted;
        
        /// <remarks/>
        public event purgeDatastreamCompletedEventHandler purgeDatastreamCompleted;
        
        /// <remarks/>
        public event getNextPIDCompletedEventHandler getNextPIDCompleted;
        
        /// <remarks/>
        public event getRelationshipsCompletedEventHandler getRelationshipsCompleted;
        
        /// <remarks/>
        public event addRelationshipCompletedEventHandler addRelationshipCompleted;
        
        /// <remarks/>
        public event purgeRelationshipCompletedEventHandler purgeRelationshipCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.fedora.info/definitions/1/0/api/#ingest", RequestNamespace="http://www.fedora.info/definitions/1/0/types/", ResponseNamespace="http://www.fedora.info/definitions/1/0/types/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("objectPID", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ingest([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary")] byte[] objectXML, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string format, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string logMessage) {
            object[] results = this.Invoke("ingest", new object[] {
                        objectXML,
                        format,
                        logMessage});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ingestAsync(byte[] objectXML, string format, string logMessage) {
            this.ingestAsync(objectXML, format, logMessage, null);
        }
        
        /// <remarks/>
        public void ingestAsync(byte[] objectXML, string format, string logMessage, object userState) {
            if ((this.ingestOperationCompleted == null)) {
                this.ingestOperationCompleted = new System.Threading.SendOrPostCallback(this.OningestOperationCompleted);
            }
            this.InvokeAsync("ingest", new object[] {
                        objectXML,
                        format,
                        logMessage}, this.ingestOperationCompleted, userState);
        }
        
        private void OningestOperationCompleted(object arg) {
            if ((this.ingestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ingestCompleted(this, new ingestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.fedora.info/definitions/1/0/api/#modifyObject", RequestNamespace="http://www.fedora.info/definitions/1/0/types/", ResponseNamespace="http://www.fedora.info/definitions/1/0/types/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("modifiedDate", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string modifyObject([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string pid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string state, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string label, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string ownerId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string logMessage) {
            object[] results = this.Invoke("modifyObject", new object[] {
                        pid,
                        state,
                        label,
                        ownerId,
                        logMessage});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void modifyObjectAsync(string pid, string state, string label, string ownerId, string logMessage) {
            this.modifyObjectAsync(pid, state, label, ownerId, logMessage, null);
        }
        
        /// <remarks/>
        public void modifyObjectAsync(string pid, string state, string label, string ownerId, string logMessage, object userState) {
            if ((this.modifyObjectOperationCompleted == null)) {
                this.modifyObjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmodifyObjectOperationCompleted);
            }
            this.InvokeAsync("modifyObject", new object[] {
                        pid,
                        state,
                        label,
                        ownerId,
                        logMessage}, this.modifyObjectOperationCompleted, userState);
        }
        
        private void OnmodifyObjectOperationCompleted(object arg) {
            if ((this.modifyObjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.modifyObjectCompleted(this, new modifyObjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.fedora.info/definitions/1/0/api/#getObjectXML", RequestNamespace="http://www.fedora.info/definitions/1/0/types/", ResponseNamespace="http://www.fedora.info/definitions/1/0/types/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("objectXML", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary")]
        public byte[] getObjectXML([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string pid) {
            object[] results = this.Invoke("getObjectXML", new object[] {
                        pid});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void getObjectXMLAsync(string pid) {
            this.getObjectXMLAsync(pid, null);
        }
        
        /// <remarks/>
        public void getObjectXMLAsync(string pid, object userState) {
            if ((this.getObjectXMLOperationCompleted == null)) {
                this.getObjectXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetObjectXMLOperationCompleted);
            }
            this.InvokeAsync("getObjectXML", new object[] {
                        pid}, this.getObjectXMLOperationCompleted, userState);
        }
        
        private void OngetObjectXMLOperationCompleted(object arg) {
            if ((this.getObjectXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getObjectXMLCompleted(this, new getObjectXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.fedora.info/definitions/1/0/api/#export", RequestNamespace="http://www.fedora.info/definitions/1/0/types/", ResponseNamespace="http://www.fedora.info/definitions/1/0/types/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("objectXML", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary")]
        public byte[] export([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string pid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string format, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string context) {
            object[] results = this.Invoke("export", new object[] {
                        pid,
                        format,
                        context});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void exportAsync(string pid, string format, string context) {
            this.exportAsync(pid, format, context, null);
        }
        
        /// <remarks/>
        public void exportAsync(string pid, string format, string context, object userState) {
            if ((this.exportOperationCompleted == null)) {
                this.exportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnexportOperationCompleted);
            }
            this.InvokeAsync("export", new object[] {
                        pid,
                        format,
                        context}, this.exportOperationCompleted, userState);
        }
        
        private void OnexportOperationCompleted(object arg) {
            if ((this.exportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.exportCompleted(this, new exportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.fedora.info/definitions/1/0/api/#purgeObject", RequestNamespace="http://www.fedora.info/definitions/1/0/types/", ResponseNamespace="http://www.fedora.info/definitions/1/0/types/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("purgedDate", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string purgeObject([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string pid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string logMessage, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool force) {
            object[] results = this.Invoke("purgeObject", new object[] {
                        pid,
                        logMessage,
                        force});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void purgeObjectAsync(string pid, string logMessage, bool force) {
            this.purgeObjectAsync(pid, logMessage, force, null);
        }
        
        /// <remarks/>
        public void purgeObjectAsync(string pid, string logMessage, bool force, object userState) {
            if ((this.purgeObjectOperationCompleted == null)) {
                this.purgeObjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnpurgeObjectOperationCompleted);
            }
            this.InvokeAsync("purgeObject", new object[] {
                        pid,
                        logMessage,
                        force}, this.purgeObjectOperationCompleted, userState);
        }
        
        private void OnpurgeObjectOperationCompleted(object arg) {
            if ((this.purgeObjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.purgeObjectCompleted(this, new purgeObjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.fedora.info/definitions/1/0/api/#addDatastream", RequestNamespace="http://www.fedora.info/definitions/1/0/types/", ResponseNamespace="http://www.fedora.info/definitions/1/0/types/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("datastreamID", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string addDatastream([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string pid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string dsID, [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)] string[] altIDs, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string dsLabel, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool versionable, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string MIMEType, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string formatURI, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string dsLocation, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string controlGroup, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string dsState, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string checksumType, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string checksum, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string logMessage) {
            object[] results = this.Invoke("addDatastream", new object[] {
                        pid,
                        dsID,
                        altIDs,
                        dsLabel,
                        versionable,
                        MIMEType,
                        formatURI,
                        dsLocation,
                        controlGroup,
                        dsState,
                        checksumType,
                        checksum,
                        logMessage});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void addDatastreamAsync(string pid, string dsID, string[] altIDs, string dsLabel, bool versionable, string MIMEType, string formatURI, string dsLocation, string controlGroup, string dsState, string checksumType, string checksum, string logMessage) {
            this.addDatastreamAsync(pid, dsID, altIDs, dsLabel, versionable, MIMEType, formatURI, dsLocation, controlGroup, dsState, checksumType, checksum, logMessage, null);
        }
        
        /// <remarks/>
        public void addDatastreamAsync(string pid, string dsID, string[] altIDs, string dsLabel, bool versionable, string MIMEType, string formatURI, string dsLocation, string controlGroup, string dsState, string checksumType, string checksum, string logMessage, object userState) {
            if ((this.addDatastreamOperationCompleted == null)) {
                this.addDatastreamOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddDatastreamOperationCompleted);
            }
            this.InvokeAsync("addDatastream", new object[] {
                        pid,
                        dsID,
                        altIDs,
                        dsLabel,
                        versionable,
                        MIMEType,
                        formatURI,
                        dsLocation,
                        controlGroup,
                        dsState,
                        checksumType,
                        checksum,
                        logMessage}, this.addDatastreamOperationCompleted, userState);
        }
        
        private void OnaddDatastreamOperationCompleted(object arg) {
            if ((this.addDatastreamCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addDatastreamCompleted(this, new addDatastreamCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.fedora.info/definitions/1/0/api/#modifyDatastreamByReference", RequestNamespace="http://www.fedora.info/definitions/1/0/types/", ResponseNamespace="http://www.fedora.info/definitions/1/0/types/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("modifiedDate", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string modifyDatastreamByReference([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string pid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string dsID, [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)] string[] altIDs, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string dsLabel, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string MIMEType, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string formatURI, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string dsLocation, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string checksumType, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string checksum, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string logMessage, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool force) {
            object[] results = this.Invoke("modifyDatastreamByReference", new object[] {
                        pid,
                        dsID,
                        altIDs,
                        dsLabel,
                        MIMEType,
                        formatURI,
                        dsLocation,
                        checksumType,
                        checksum,
                        logMessage,
                        force});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void modifyDatastreamByReferenceAsync(string pid, string dsID, string[] altIDs, string dsLabel, string MIMEType, string formatURI, string dsLocation, string checksumType, string checksum, string logMessage, bool force) {
            this.modifyDatastreamByReferenceAsync(pid, dsID, altIDs, dsLabel, MIMEType, formatURI, dsLocation, checksumType, checksum, logMessage, force, null);
        }
        
        /// <remarks/>
        public void modifyDatastreamByReferenceAsync(string pid, string dsID, string[] altIDs, string dsLabel, string MIMEType, string formatURI, string dsLocation, string checksumType, string checksum, string logMessage, bool force, object userState) {
            if ((this.modifyDatastreamByReferenceOperationCompleted == null)) {
                this.modifyDatastreamByReferenceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmodifyDatastreamByReferenceOperationCompleted);
            }
            this.InvokeAsync("modifyDatastreamByReference", new object[] {
                        pid,
                        dsID,
                        altIDs,
                        dsLabel,
                        MIMEType,
                        formatURI,
                        dsLocation,
                        checksumType,
                        checksum,
                        logMessage,
                        force}, this.modifyDatastreamByReferenceOperationCompleted, userState);
        }
        
        private void OnmodifyDatastreamByReferenceOperationCompleted(object arg) {
            if ((this.modifyDatastreamByReferenceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.modifyDatastreamByReferenceCompleted(this, new modifyDatastreamByReferenceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.fedora.info/definitions/1/0/api/#modifyDatastreamByValue", RequestNamespace="http://www.fedora.info/definitions/1/0/types/", ResponseNamespace="http://www.fedora.info/definitions/1/0/types/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("modifiedDate", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string modifyDatastreamByValue([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string pid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string dsID, [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)] string[] altIDs, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string dsLabel, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string MIMEType, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string formatURI, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary")] byte[] dsContent, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string checksumType, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string checksum, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string logMessage, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool force) {
            object[] results = this.Invoke("modifyDatastreamByValue", new object[] {
                        pid,
                        dsID,
                        altIDs,
                        dsLabel,
                        MIMEType,
                        formatURI,
                        dsContent,
                        checksumType,
                        checksum,
                        logMessage,
                        force});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void modifyDatastreamByValueAsync(string pid, string dsID, string[] altIDs, string dsLabel, string MIMEType, string formatURI, byte[] dsContent, string checksumType, string checksum, string logMessage, bool force) {
            this.modifyDatastreamByValueAsync(pid, dsID, altIDs, dsLabel, MIMEType, formatURI, dsContent, checksumType, checksum, logMessage, force, null);
        }
        
        /// <remarks/>
        public void modifyDatastreamByValueAsync(string pid, string dsID, string[] altIDs, string dsLabel, string MIMEType, string formatURI, byte[] dsContent, string checksumType, string checksum, string logMessage, bool force, object userState) {
            if ((this.modifyDatastreamByValueOperationCompleted == null)) {
                this.modifyDatastreamByValueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmodifyDatastreamByValueOperationCompleted);
            }
            this.InvokeAsync("modifyDatastreamByValue", new object[] {
                        pid,
                        dsID,
                        altIDs,
                        dsLabel,
                        MIMEType,
                        formatURI,
                        dsContent,
                        checksumType,
                        checksum,
                        logMessage,
                        force}, this.modifyDatastreamByValueOperationCompleted, userState);
        }
        
        private void OnmodifyDatastreamByValueOperationCompleted(object arg) {
            if ((this.modifyDatastreamByValueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.modifyDatastreamByValueCompleted(this, new modifyDatastreamByValueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.fedora.info/definitions/1/0/api/#setDatastreamState", RequestNamespace="http://www.fedora.info/definitions/1/0/types/", ResponseNamespace="http://www.fedora.info/definitions/1/0/types/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("modifiedDate", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string setDatastreamState([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string pid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string dsID, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string dsState, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string logMessage) {
            object[] results = this.Invoke("setDatastreamState", new object[] {
                        pid,
                        dsID,
                        dsState,
                        logMessage});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void setDatastreamStateAsync(string pid, string dsID, string dsState, string logMessage) {
            this.setDatastreamStateAsync(pid, dsID, dsState, logMessage, null);
        }
        
        /// <remarks/>
        public void setDatastreamStateAsync(string pid, string dsID, string dsState, string logMessage, object userState) {
            if ((this.setDatastreamStateOperationCompleted == null)) {
                this.setDatastreamStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetDatastreamStateOperationCompleted);
            }
            this.InvokeAsync("setDatastreamState", new object[] {
                        pid,
                        dsID,
                        dsState,
                        logMessage}, this.setDatastreamStateOperationCompleted, userState);
        }
        
        private void OnsetDatastreamStateOperationCompleted(object arg) {
            if ((this.setDatastreamStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setDatastreamStateCompleted(this, new setDatastreamStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.fedora.info/definitions/1/0/api/#setDatastreamVersionable", RequestNamespace="http://www.fedora.info/definitions/1/0/types/", ResponseNamespace="http://www.fedora.info/definitions/1/0/types/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("modifiedDate", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string setDatastreamVersionable([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string pid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string dsID, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool versionable, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string logMessage) {
            object[] results = this.Invoke("setDatastreamVersionable", new object[] {
                        pid,
                        dsID,
                        versionable,
                        logMessage});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void setDatastreamVersionableAsync(string pid, string dsID, bool versionable, string logMessage) {
            this.setDatastreamVersionableAsync(pid, dsID, versionable, logMessage, null);
        }
        
        /// <remarks/>
        public void setDatastreamVersionableAsync(string pid, string dsID, bool versionable, string logMessage, object userState) {
            if ((this.setDatastreamVersionableOperationCompleted == null)) {
                this.setDatastreamVersionableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetDatastreamVersionableOperationCompleted);
            }
            this.InvokeAsync("setDatastreamVersionable", new object[] {
                        pid,
                        dsID,
                        versionable,
                        logMessage}, this.setDatastreamVersionableOperationCompleted, userState);
        }
        
        private void OnsetDatastreamVersionableOperationCompleted(object arg) {
            if ((this.setDatastreamVersionableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setDatastreamVersionableCompleted(this, new setDatastreamVersionableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.fedora.info/definitions/1/0/api/#compareDatastreamChecksum", RequestNamespace="http://www.fedora.info/definitions/1/0/types/", ResponseNamespace="http://www.fedora.info/definitions/1/0/types/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("checksum", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string compareDatastreamChecksum([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string pid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string dsID, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string versionDate) {
            object[] results = this.Invoke("compareDatastreamChecksum", new object[] {
                        pid,
                        dsID,
                        versionDate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void compareDatastreamChecksumAsync(string pid, string dsID, string versionDate) {
            this.compareDatastreamChecksumAsync(pid, dsID, versionDate, null);
        }
        
        /// <remarks/>
        public void compareDatastreamChecksumAsync(string pid, string dsID, string versionDate, object userState) {
            if ((this.compareDatastreamChecksumOperationCompleted == null)) {
                this.compareDatastreamChecksumOperationCompleted = new System.Threading.SendOrPostCallback(this.OncompareDatastreamChecksumOperationCompleted);
            }
            this.InvokeAsync("compareDatastreamChecksum", new object[] {
                        pid,
                        dsID,
                        versionDate}, this.compareDatastreamChecksumOperationCompleted, userState);
        }
        
        private void OncompareDatastreamChecksumOperationCompleted(object arg) {
            if ((this.compareDatastreamChecksumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.compareDatastreamChecksumCompleted(this, new compareDatastreamChecksumCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.fedora.info/definitions/1/0/api/#getDatastream", RequestNamespace="http://www.fedora.info/definitions/1/0/types/", ResponseNamespace="http://www.fedora.info/definitions/1/0/types/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("datastream", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Datastream getDatastream([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string pid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string dsID, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string asOfDateTime) {
            object[] results = this.Invoke("getDatastream", new object[] {
                        pid,
                        dsID,
                        asOfDateTime});
            return ((Datastream)(results[0]));
        }
        
        /// <remarks/>
        public void getDatastreamAsync(string pid, string dsID, string asOfDateTime) {
            this.getDatastreamAsync(pid, dsID, asOfDateTime, null);
        }
        
        /// <remarks/>
        public void getDatastreamAsync(string pid, string dsID, string asOfDateTime, object userState) {
            if ((this.getDatastreamOperationCompleted == null)) {
                this.getDatastreamOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDatastreamOperationCompleted);
            }
            this.InvokeAsync("getDatastream", new object[] {
                        pid,
                        dsID,
                        asOfDateTime}, this.getDatastreamOperationCompleted, userState);
        }
        
        private void OngetDatastreamOperationCompleted(object arg) {
            if ((this.getDatastreamCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDatastreamCompleted(this, new getDatastreamCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.fedora.info/definitions/1/0/api/#getDatastreams", RequestNamespace="http://www.fedora.info/definitions/1/0/types/", ResponseNamespace="http://www.fedora.info/definitions/1/0/types/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("datastream", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Datastream[] getDatastreams([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string pid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string asOfDateTime, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string dsState) {
            object[] results = this.Invoke("getDatastreams", new object[] {
                        pid,
                        asOfDateTime,
                        dsState});
            return ((Datastream[])(results[0]));
        }
        
        /// <remarks/>
        public void getDatastreamsAsync(string pid, string asOfDateTime, string dsState) {
            this.getDatastreamsAsync(pid, asOfDateTime, dsState, null);
        }
        
        /// <remarks/>
        public void getDatastreamsAsync(string pid, string asOfDateTime, string dsState, object userState) {
            if ((this.getDatastreamsOperationCompleted == null)) {
                this.getDatastreamsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDatastreamsOperationCompleted);
            }
            this.InvokeAsync("getDatastreams", new object[] {
                        pid,
                        asOfDateTime,
                        dsState}, this.getDatastreamsOperationCompleted, userState);
        }
        
        private void OngetDatastreamsOperationCompleted(object arg) {
            if ((this.getDatastreamsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDatastreamsCompleted(this, new getDatastreamsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.fedora.info/definitions/1/0/api/#getDatastreamHistory", RequestNamespace="http://www.fedora.info/definitions/1/0/types/", ResponseNamespace="http://www.fedora.info/definitions/1/0/types/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("datastream", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Datastream[] getDatastreamHistory([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string pid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string dsID) {
            object[] results = this.Invoke("getDatastreamHistory", new object[] {
                        pid,
                        dsID});
            return ((Datastream[])(results[0]));
        }
        
        /// <remarks/>
        public void getDatastreamHistoryAsync(string pid, string dsID) {
            this.getDatastreamHistoryAsync(pid, dsID, null);
        }
        
        /// <remarks/>
        public void getDatastreamHistoryAsync(string pid, string dsID, object userState) {
            if ((this.getDatastreamHistoryOperationCompleted == null)) {
                this.getDatastreamHistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDatastreamHistoryOperationCompleted);
            }
            this.InvokeAsync("getDatastreamHistory", new object[] {
                        pid,
                        dsID}, this.getDatastreamHistoryOperationCompleted, userState);
        }
        
        private void OngetDatastreamHistoryOperationCompleted(object arg) {
            if ((this.getDatastreamHistoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDatastreamHistoryCompleted(this, new getDatastreamHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.fedora.info/definitions/1/0/api/#purgeDatastream", RequestNamespace="http://www.fedora.info/definitions/1/0/types/", ResponseNamespace="http://www.fedora.info/definitions/1/0/types/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("purgedVersionDate", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string[] purgeDatastream([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string pid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string dsID, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string startDT, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string endDT, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string logMessage, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool force) {
            object[] results = this.Invoke("purgeDatastream", new object[] {
                        pid,
                        dsID,
                        startDT,
                        endDT,
                        logMessage,
                        force});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void purgeDatastreamAsync(string pid, string dsID, string startDT, string endDT, string logMessage, bool force) {
            this.purgeDatastreamAsync(pid, dsID, startDT, endDT, logMessage, force, null);
        }
        
        /// <remarks/>
        public void purgeDatastreamAsync(string pid, string dsID, string startDT, string endDT, string logMessage, bool force, object userState) {
            if ((this.purgeDatastreamOperationCompleted == null)) {
                this.purgeDatastreamOperationCompleted = new System.Threading.SendOrPostCallback(this.OnpurgeDatastreamOperationCompleted);
            }
            this.InvokeAsync("purgeDatastream", new object[] {
                        pid,
                        dsID,
                        startDT,
                        endDT,
                        logMessage,
                        force}, this.purgeDatastreamOperationCompleted, userState);
        }
        
        private void OnpurgeDatastreamOperationCompleted(object arg) {
            if ((this.purgeDatastreamCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.purgeDatastreamCompleted(this, new purgeDatastreamCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.fedora.info/definitions/1/0/api/#getNextPID", RequestNamespace="http://www.fedora.info/definitions/1/0/types/", ResponseNamespace="http://www.fedora.info/definitions/1/0/types/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("pid", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string[] getNextPID([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger", IsNullable=true)] string numPIDs, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string pidNamespace) {
            object[] results = this.Invoke("getNextPID", new object[] {
                        numPIDs,
                        pidNamespace});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void getNextPIDAsync(string numPIDs, string pidNamespace) {
            this.getNextPIDAsync(numPIDs, pidNamespace, null);
        }
        
        /// <remarks/>
        public void getNextPIDAsync(string numPIDs, string pidNamespace, object userState) {
            if ((this.getNextPIDOperationCompleted == null)) {
                this.getNextPIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetNextPIDOperationCompleted);
            }
            this.InvokeAsync("getNextPID", new object[] {
                        numPIDs,
                        pidNamespace}, this.getNextPIDOperationCompleted, userState);
        }
        
        private void OngetNextPIDOperationCompleted(object arg) {
            if ((this.getNextPIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getNextPIDCompleted(this, new getNextPIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.fedora.info/definitions/1/0/api/#getRelationships", RequestNamespace="http://www.fedora.info/definitions/1/0/types/", ResponseNamespace="http://www.fedora.info/definitions/1/0/types/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("relationships", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public RelationshipTuple[] getRelationships([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string pid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string relationship) {
            object[] results = this.Invoke("getRelationships", new object[] {
                        pid,
                        relationship});
            return ((RelationshipTuple[])(results[0]));
        }
        
        /// <remarks/>
        public void getRelationshipsAsync(string pid, string relationship) {
            this.getRelationshipsAsync(pid, relationship, null);
        }
        
        /// <remarks/>
        public void getRelationshipsAsync(string pid, string relationship, object userState) {
            if ((this.getRelationshipsOperationCompleted == null)) {
                this.getRelationshipsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetRelationshipsOperationCompleted);
            }
            this.InvokeAsync("getRelationships", new object[] {
                        pid,
                        relationship}, this.getRelationshipsOperationCompleted, userState);
        }
        
        private void OngetRelationshipsOperationCompleted(object arg) {
            if ((this.getRelationshipsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getRelationshipsCompleted(this, new getRelationshipsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.fedora.info/definitions/1/0/api/#addRelationship", RequestNamespace="http://www.fedora.info/definitions/1/0/types/", ResponseNamespace="http://www.fedora.info/definitions/1/0/types/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("added", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool addRelationship([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string pid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string relationship, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string @object, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool isLiteral, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string datatype) {
            object[] results = this.Invoke("addRelationship", new object[] {
                        pid,
                        relationship,
                        @object,
                        isLiteral,
                        datatype});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void addRelationshipAsync(string pid, string relationship, string @object, bool isLiteral, string datatype) {
            this.addRelationshipAsync(pid, relationship, @object, isLiteral, datatype, null);
        }
        
        /// <remarks/>
        public void addRelationshipAsync(string pid, string relationship, string @object, bool isLiteral, string datatype, object userState) {
            if ((this.addRelationshipOperationCompleted == null)) {
                this.addRelationshipOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddRelationshipOperationCompleted);
            }
            this.InvokeAsync("addRelationship", new object[] {
                        pid,
                        relationship,
                        @object,
                        isLiteral,
                        datatype}, this.addRelationshipOperationCompleted, userState);
        }
        
        private void OnaddRelationshipOperationCompleted(object arg) {
            if ((this.addRelationshipCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addRelationshipCompleted(this, new addRelationshipCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.fedora.info/definitions/1/0/api/#purgeRelationship", RequestNamespace="http://www.fedora.info/definitions/1/0/types/", ResponseNamespace="http://www.fedora.info/definitions/1/0/types/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("purged", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool purgeRelationship([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string pid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string relationship, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string @object, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool isLiteral, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string datatype) {
            object[] results = this.Invoke("purgeRelationship", new object[] {
                        pid,
                        relationship,
                        @object,
                        isLiteral,
                        datatype});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void purgeRelationshipAsync(string pid, string relationship, string @object, bool isLiteral, string datatype) {
            this.purgeRelationshipAsync(pid, relationship, @object, isLiteral, datatype, null);
        }
        
        /// <remarks/>
        public void purgeRelationshipAsync(string pid, string relationship, string @object, bool isLiteral, string datatype, object userState) {
            if ((this.purgeRelationshipOperationCompleted == null)) {
                this.purgeRelationshipOperationCompleted = new System.Threading.SendOrPostCallback(this.OnpurgeRelationshipOperationCompleted);
            }
            this.InvokeAsync("purgeRelationship", new object[] {
                        pid,
                        relationship,
                        @object,
                        isLiteral,
                        datatype}, this.purgeRelationshipOperationCompleted, userState);
        }
        
        private void OnpurgeRelationshipOperationCompleted(object arg) {
            if ((this.purgeRelationshipCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.purgeRelationshipCompleted(this, new purgeRelationshipCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.fedora.info/definitions/1/0/types/")]
    public partial class Datastream {
        
        private DatastreamControlGroup controlGroupField;
        
        private string idField;
        
        private string versionIDField;
        
        private string[] altIDsField;
        
        private string labelField;
        
        private bool versionableField;
        
        private string mIMETypeField;
        
        private string formatURIField;
        
        private string createDateField;
        
        private long sizeField;
        
        private string stateField;
        
        private string locationField;
        
        private string checksumTypeField;
        
        private string checksumField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public DatastreamControlGroup controlGroup {
            get {
                return this.controlGroupField;
            }
            set {
                this.controlGroupField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string versionID {
            get {
                return this.versionIDField;
            }
            set {
                this.versionIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] altIDs {
            get {
                return this.altIDsField;
            }
            set {
                this.altIDsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string label {
            get {
                return this.labelField;
            }
            set {
                this.labelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool versionable {
            get {
                return this.versionableField;
            }
            set {
                this.versionableField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string MIMEType {
            get {
                return this.mIMETypeField;
            }
            set {
                this.mIMETypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string formatURI {
            get {
                return this.formatURIField;
            }
            set {
                this.formatURIField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string createDate {
            get {
                return this.createDateField;
            }
            set {
                this.createDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long size {
            get {
                return this.sizeField;
            }
            set {
                this.sizeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string state {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string location {
            get {
                return this.locationField;
            }
            set {
                this.locationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string checksumType {
            get {
                return this.checksumTypeField;
            }
            set {
                this.checksumTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string checksum {
            get {
                return this.checksumField;
            }
            set {
                this.checksumField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.fedora.info/definitions/1/0/types/")]
    public enum DatastreamControlGroup {
        
        /// <remarks/>
        E,
        
        /// <remarks/>
        M,
        
        /// <remarks/>
        X,
        
        /// <remarks/>
        R,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.fedora.info/definitions/1/0/types/")]
    public partial class RelationshipTuple {
        
        private string subjectField;
        
        private string predicateField;
        
        private string objectField;
        
        private bool isLiteralField;
        
        private string datatypeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string subject {
            get {
                return this.subjectField;
            }
            set {
                this.subjectField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string predicate {
            get {
                return this.predicateField;
            }
            set {
                this.predicateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string @object {
            get {
                return this.objectField;
            }
            set {
                this.objectField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool isLiteral {
            get {
                return this.isLiteralField;
            }
            set {
                this.isLiteralField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string datatype {
            get {
                return this.datatypeField;
            }
            set {
                this.datatypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ingestCompletedEventHandler(object sender, ingestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ingestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ingestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void modifyObjectCompletedEventHandler(object sender, modifyObjectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class modifyObjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal modifyObjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getObjectXMLCompletedEventHandler(object sender, getObjectXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getObjectXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getObjectXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void exportCompletedEventHandler(object sender, exportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class exportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal exportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void purgeObjectCompletedEventHandler(object sender, purgeObjectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class purgeObjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal purgeObjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void addDatastreamCompletedEventHandler(object sender, addDatastreamCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addDatastreamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addDatastreamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void modifyDatastreamByReferenceCompletedEventHandler(object sender, modifyDatastreamByReferenceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class modifyDatastreamByReferenceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal modifyDatastreamByReferenceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void modifyDatastreamByValueCompletedEventHandler(object sender, modifyDatastreamByValueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class modifyDatastreamByValueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal modifyDatastreamByValueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void setDatastreamStateCompletedEventHandler(object sender, setDatastreamStateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class setDatastreamStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal setDatastreamStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void setDatastreamVersionableCompletedEventHandler(object sender, setDatastreamVersionableCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class setDatastreamVersionableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal setDatastreamVersionableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void compareDatastreamChecksumCompletedEventHandler(object sender, compareDatastreamChecksumCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class compareDatastreamChecksumCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal compareDatastreamChecksumCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getDatastreamCompletedEventHandler(object sender, getDatastreamCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDatastreamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDatastreamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Datastream Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Datastream)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getDatastreamsCompletedEventHandler(object sender, getDatastreamsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDatastreamsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDatastreamsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Datastream[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Datastream[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getDatastreamHistoryCompletedEventHandler(object sender, getDatastreamHistoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDatastreamHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDatastreamHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Datastream[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Datastream[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void purgeDatastreamCompletedEventHandler(object sender, purgeDatastreamCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class purgeDatastreamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal purgeDatastreamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getNextPIDCompletedEventHandler(object sender, getNextPIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getNextPIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getNextPIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getRelationshipsCompletedEventHandler(object sender, getRelationshipsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getRelationshipsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getRelationshipsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RelationshipTuple[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RelationshipTuple[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void addRelationshipCompletedEventHandler(object sender, addRelationshipCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addRelationshipCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addRelationshipCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void purgeRelationshipCompletedEventHandler(object sender, purgeRelationshipCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class purgeRelationshipCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal purgeRelationshipCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591